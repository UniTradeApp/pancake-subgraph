type PancakeFactory @entity {
  id: ID!

  "Total of pairs"
  totalPairs: BigInt!
}

type Bundle @entity {
  id: ID!

  "BNB price, in USD"
  bnbPrice: BigDecimal!
}

type Token @entity {
  id: ID!

  "Name"
  name: String!
  "Symbol"
  symbol: String!
  "Decimals"
  decimals: BigInt!

  # liquidity across all pairs
  totalLiquidity: BigDecimal!

  # derived prices
  derivedBNB: BigDecimal
  derivedUSD: BigDecimal

  # derived fields
  hourlyCandlesticks: [HourlyCandlestick!]! @derivedFrom(field: "token")
}

type Pair @entity {
  id: ID!

  name: String!

  # mirrored from the smart contract
  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigDecimal!

  # derived liquidity
  reserveBNB: BigDecimal!
  reserveUSD: BigDecimal!

  # Price in terms of the asset pair
  token0Price: BigDecimal!
  token1Price: BigDecimal!

  block: BigInt!
  timestamp: BigInt!
}

type HourlyCandlestick @entity {
  id: ID!

  date: Int!
  token: Token!

  # price stats
  openPriceUSD: BigDecimal!
  closePriceUSD: BigDecimal!
  lowPriceUSD: BigDecimal!
  highPriceUSD: BigDecimal!
}
